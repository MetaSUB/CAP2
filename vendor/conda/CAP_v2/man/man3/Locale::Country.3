.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Locale::Country 3"
.TH Locale::Country 3 "2018-03-23" "perl v5.26.2" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Locale::Country \- standard codes for country identification
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   use Locale::Country;
\&
\&   $country = code2country(\*(Aqjp\*(Aq [,CODESET]);        # $country gets \*(AqJapan\*(Aq
\&   $code    = country2code(\*(AqNorway\*(Aq [,CODESET]);    # $code gets \*(Aqno\*(Aq
\&
\&   @codes   = all_country_codes( [CODESET]);
\&   @names   = all_country_names();
\&
\&   # semi\-private routines
\&   Locale::Country::rename_country(\*(Aqgb\*(Aq => \*(AqGreat Britain\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides access to several code sets
that can be used for identifying countries, such as those defined in
\&\s-1ISO 3166\-1.\s0
.PP
Most of the routines take an optional additional argument which
specifies the code set to use. If not specified, the default \s-1ISO
3166\-1\s0 two-letter codes will be used.
.SH "SUPPORTED CODE SETS"
.IX Header "SUPPORTED CODE SETS"
There are several different code sets you can use for identifying
countries. A code set may be specified using either a name, or a
constant that is automatically exported by this module.
.PP
For example, the two are equivalent:
.PP
.Vb 2
\&   $country = code2country(\*(Aqjp\*(Aq,\*(Aqalpha\-2\*(Aq);
\&   $country = code2country(\*(Aqjp\*(Aq,LOCALE_CODE_ALPHA_2);
.Ve
.PP
The codesets currently supported are:
.IP "\fBalpha\-2, \s-1LOCALE_CODE_ALPHA_2\s0\fR" 4
.IX Item "alpha-2, LOCALE_CODE_ALPHA_2"
This is the set of two-letter (lowercase) codes from \s-1ISO 3166\-1,\s0 such
as 'tv' for Tuvalu.
.Sp
This is the default code set.
.IP "\fBalpha\-3, \s-1LOCALE_CODE_ALPHA_3\s0\fR" 4
.IX Item "alpha-3, LOCALE_CODE_ALPHA_3"
This is the set of three-letter (lowercase) codes from \s-1ISO 3166\-1,\s0
such as 'brb' for Barbados. These codes are actually defined and
maintained by the U.N. Statistics division.
.IP "\fBnumeric, \s-1LOCALE_CODE_NUMERIC\s0\fR" 4
.IX Item "numeric, LOCALE_CODE_NUMERIC"
This is the set of three-digit numeric codes from \s-1ISO 3166\-1,\s0 such as
064 for Bhutan. These codes are actually defined and maintained by the
U.N. Statistics division.
.Sp
If a 2\-digit code is entered, it is converted to 3 digits by prepending
a 0.
.IP "\fBdom, \s-1LOCALE_CODE_DOM\s0\fR" 4
.IX Item "dom, LOCALE_CODE_DOM"
The \s-1IANA\s0 is responsible for delegating management of the top level country
domains.  The country domains are the two-letter (lowercase) codes from \s-1ISO 3166\s0
with a few other additions.
.IP "\fBun\-alpha\-3, \s-1LOCALE_CODE_UN_ALPHA_3\s0\fR" 4
.IX Item "un-alpha-3, LOCALE_CODE_UN_ALPHA_3"
.PD 0
.IP "\fBun-numeric, \s-1LOCALE_CODE_UN_NUMERIC\s0\fR" 4
.IX Item "un-numeric, LOCALE_CODE_UN_NUMERIC"
.PD
The \s-1UN\s0 maintains a list of codes that is similar, but not identical, to the
standard \s-1ISO 3166\s0 lists.  They maintain a 3\-letter code (similar to alpha\-3)
and a numeric code (similar to numeric).
.IP "\fBgenc\-alpha\-2, \s-1LOCALE_CODE_GENC_ALPHA_2\s0\fR" 4
.IX Item "genc-alpha-2, LOCALE_CODE_GENC_ALPHA_2"
.PD 0
.IP "\fBgenc\-alpha\-3, \s-1LOCALE_CODE_GENC_ALPHA_3\s0\fR" 4
.IX Item "genc-alpha-3, LOCALE_CODE_GENC_ALPHA_3"
.IP "\fBgenc-numeric, \s-1LOCALE_CODE_GENC_NUMERIC\s0\fR" 4
.IX Item "genc-numeric, LOCALE_CODE_GENC_NUMERIC"
.PD
The \s-1GENC\s0 codes are the \s-1US\s0 Government codes that replace the \s-1FIPS\-11\s0 codes.
They are based on, but not identical to the standard \s-1ISO 3166\s0 lists.
.PP
\&\s-1NOTE:\s0 As of version 3.27, the \s-1FIPS\s0 code set is no longer supported.  See the
Locale::Codes::Changes document for details.
.SH "ROUTINES"
.IX Header "ROUTINES"
.IP "\fBcode2country(\s-1CODE\s0 [,CODESET] [,'retired'])\fR" 4
.IX Item "code2country(CODE [,CODESET] [,'retired'])"
.PD 0
.IP "\fBcountry2code(\s-1NAME\s0 [,CODESET] [,'retired'])\fR" 4
.IX Item "country2code(NAME [,CODESET] [,'retired'])"
.IP "\fBcountry_code2code(\s-1CODE ,CODESET ,CODESET2\s0)\fR" 4
.IX Item "country_code2code(CODE ,CODESET ,CODESET2)"
.IP "\fBall_country_codes([\s-1CODESET\s0] [,'retired'])\fR" 4
.IX Item "all_country_codes([CODESET] [,'retired'])"
.IP "\fBall_country_names([\s-1CODESET\s0] [,'retired'])\fR" 4
.IX Item "all_country_names([CODESET] [,'retired'])"
.IP "\fBLocale::Country::rename_country(\s-1CODE ,NEW_NAME\s0 [,CODESET])\fR" 4
.IX Item "Locale::Country::rename_country(CODE ,NEW_NAME [,CODESET])"
.IP "\fBLocale::Country::add_country(\s-1CODE ,NAME\s0 [,CODESET])\fR" 4
.IX Item "Locale::Country::add_country(CODE ,NAME [,CODESET])"
.IP "\fBLocale::Country::delete_country(\s-1CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Country::delete_country(CODE [,CODESET])"
.IP "\fBLocale::Country::add_country_alias(\s-1NAME ,NEW_NAME\s0)\fR" 4
.IX Item "Locale::Country::add_country_alias(NAME ,NEW_NAME)"
.IP "\fBLocale::Country::delete_country_alias(\s-1NAME\s0)\fR" 4
.IX Item "Locale::Country::delete_country_alias(NAME)"
.IP "\fBLocale::Country::rename_country_code(\s-1CODE ,NEW_CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Country::rename_country_code(CODE ,NEW_CODE [,CODESET])"
.IP "\fBLocale::Country::add_country_code_alias(\s-1CODE ,NEW_CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Country::add_country_code_alias(CODE ,NEW_CODE [,CODESET])"
.IP "\fBLocale::Country::delete_country_code_alias(\s-1CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Country::delete_country_code_alias(CODE [,CODESET])"
.PD
These routines are all documented in the Locale::Codes::API man page.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Locale::Codes" 4
.IX Item "Locale::Codes"
The Locale-Codes distribution.
.IP "Locale::Codes::API" 4
.IX Item "Locale::Codes::API"
The list of functions supported by this module.
.IP "Locale::SubCountry" 4
.IX Item "Locale::SubCountry"
\&\s-1ISO\s0 codes for country sub-divisions (states, counties, provinces,
etc), as defined in \s-1ISO 3166\-2.\s0  This module is not part of the
Locale-Codes distribution, but is available from \s-1CPAN\s0 in
CPAN/modules/by\-module/Locale/
.IP "<http://www.iso.org/iso/home/standards/country_codes.htm>" 4
.IX Item "<http://www.iso.org/iso/home/standards/country_codes.htm>"
Official home page for the \s-1ISO 3166\s0 maintenance agency.
.IP "<http://www.iso.org/iso/home/standards/country_codes/iso\-3166\-1_decoding_table.htm>" 4
.IX Item "<http://www.iso.org/iso/home/standards/country_codes/iso-3166-1_decoding_table.htm>"
The source of \s-1ISO 3166\-1\s0 two-letter codes used by this
module.
.IP "<http://www.iana.org/domains/root/db/>" 4
.IX Item "<http://www.iana.org/domains/root/db/>"
Official source of the top-level domain names.
.IP "<http://unstats.un.org/unsd/methods/m49/m49alpha.htm>" 4
.IX Item "<http://unstats.un.org/unsd/methods/m49/m49alpha.htm>"
The source of the \s-1UN\s0 codes.
.Sp
Previously, this table was treated as a source of the \s-1ISO 3166\s0 data,
but I found that the table was incomplete, so I stopped using it.
Later, it was added back in as it's own list of codes.
.IP "<https://nsgreg.nga.mil/genc/discovery>" 4
.IX Item "<https://nsgreg.nga.mil/genc/discovery>"
The source of the \s-1GENC\s0 codes.
.IP "<https://www.cia.gov/library/publications/the\-world\-factbook/appendix/print_appendix\-d.html>" 4
.IX Item "<https://www.cia.gov/library/publications/the-world-factbook/appendix/print_appendix-d.html>"
The World Factbook maintained by the \s-1CIA\s0 is a potential source of
the data.  Unfortunately, it adds/preserves non-standard codes, so it is no
longer used as a source of data.
.IP "<http://www.statoids.com/wab.html>" 4
.IX Item "<http://www.statoids.com/wab.html>"
Another unofficial source of data. Currently, it is not used to get
data, but the notes and explanatory material were very useful for
understanding discrepancies between the sources.
.SH "AUTHOR"
.IX Header "AUTHOR"
See Locale::Codes for full author history.
.PP
Currently maintained by Sullivan Beck (sbeck@cpan.org).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 3
\&   Copyright (c) 1997\-2001 Canon Research Centre Europe (CRE).
\&   Copyright (c) 2001\-2010 Neil Bowers
\&   Copyright (c) 2010\-2016 Sullivan Beck
.Ve
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
